{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"BTCGambler","text":"<p>Welcome to the public documentation for BTCGambler \u2014 a real-time crash gambling game built on Bitcoin and WebSockets.</p> <p>\ud83d\udccc Note: This project is home-hosted. The live demo is generally available between 9 AM and 5 PM EST. If the link is temporarily down, please refer to this documentation to explore features, architecture, and usage.</p> <p>\ud83d\udc49 Live Demo</p>"},{"location":"#overview","title":"\ud83d\udccc Overview","text":"<p>BTCGambler is a full-stack crypto gambling app that simulates a high-stakes crash curve with real Bitcoin transaction handling.</p> <p>It supports:</p> <ul> <li>Real-time multiplayer gameplay</li> <li>Secure wallet management using Bitcoin Core</li> <li>OAuth login (Google, GitHub, Facebook, Email)</li> <li>Transaction batching and payout logic</li> <li>Interactive chart, chat, and betting interface</li> </ul>"},{"location":"#demo","title":"\ud83d\udcf7 Demo","text":"Gameplay Demo"},{"location":"#docs","title":"\ud83d\udcc1 Docs","text":"<ul> <li>Features</li> <li>Architecture</li> <li>Setup Instructions</li> </ul>"},{"location":"architecture/","title":"\ud83c\udfd7\ufe0f Architecture","text":"<p>BTCGambler combines blockchain infrastructure with a real-time web stack.</p>"},{"location":"architecture/#components","title":"Components","text":"<ul> <li>Frontend: React + Material UI</li> <li>Backend: Django</li> <li>Realtime Engine: WebSockets</li> <li>Worker: Celery for payout, logging, broadcasts</li> <li>Blockchain: Bitcoin Core integration for real transactions</li> <li>Reverse Proxy: Caddy + Docker Compose</li> </ul>"},{"location":"architecture/#diagram","title":"Diagram","text":"<p>Insert architecture diagram here (optional)</p>"},{"location":"features/","title":"\ud83d\udd0d Features","text":""},{"location":"features/#authentication","title":"\ud83d\udd10 Authentication","text":"<p>BTCGambler provides a secure and seamless authentication system with support for:</p> OAuth login via Google, Facebook, or Github <p> </p> Email-based registration with background loading screen <p> </p> Email verification for user to be activated  <p> </p> Username based login <p> </p> Two-Factor Authentication (2FA) for enhanced security (optional) <p> </p> Email-based password reset <p> </p>"},{"location":"features/#how-it-works","title":"\ud83c\udfae How It Works","text":"<ul> <li>The game starts at a 1.00x multiplier.</li> <li>The multiplier increases in real time.</li> <li>A randomly determined \"crash point\" is hidden from the user.</li> <li>If the user cashes out before the crash, they win their bet multiplied by the current multiplier.</li> <li>If they wait too long, the game crashes and they lose their bet.</li> </ul> Gameplay Demo"},{"location":"features/#guest-user-functionality","title":"\ud83d\udc64 Guest User Functionality","text":"<p>BTCGambler supports guest login for users who wish to explore without creating an account:</p> <ul> <li>Guests can interact with the crash game temporarily, without registration</li> <li>All guest-related data (e.g. bets, chat messages) is deleted upon logout or session expiration</li> <li>Guests cannot access the Bitcoin faucet, make deposits/withdrawals, or edit profiles</li> <li>Automatic cleanup \u2014 The system ensures full cleanup of guest activity to maintain a clean state</li> </ul>"},{"location":"features/#main-application-view","title":"\ud83c\udfe0 Main Application View","text":"<p>After logging in, users land on the game dashboard \u2014 a real-time interface for placing bets and chatting with others.</p> Sleek dark-blue theme mode enabled by default, with an optional ultra dark mode for visual flexibility <p> </p> Live chat feature to interact with users while playing the game <p> </p>"},{"location":"features/#edge-case-handling","title":"\ud83d\udee1\ufe0f Edge Case Handling","text":"<ul> <li>Late joins are blocked after a set threshold</li> <li>Disconnections auto-cashout at last known multiplier</li> <li>Crash randomness is provably fair (e.g., hash-based)</li> </ul>"},{"location":"setup/","title":"\u2699\ufe0f Setup Instructions","text":"<p>NOTE: This documentation is for demonstration purposes only. Source code is private.</p>"},{"location":"setup/#requirements","title":"Requirements","text":"<ul> <li>Docker + Docker Compose</li> <li>A synced Bitcoin Core node (testnet or mainnet)</li> <li>Redis</li> </ul>"},{"location":"setup/#local-deployment-optional","title":"Local Deployment (Optional)","text":"<pre><code>git clone https://github.com/FarzamA/btcgambler\ncd btcgambler\ndocker compose up --build\n</code></pre>"},{"location":"setup/#notes","title":"Notes","text":"<ul> <li>Actual Bitcoin RPC endpoints must be secured and configured in the <code>.env</code> file.</li> <li>For actual code access, contact the author for a private walkthrough.</li> </ul>"}]}