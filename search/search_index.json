{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BTCGambler Welcome to the public documentation for BTCGambler \u2014 a real-time crash gambling game built on Bitcoin and WebSockets. \ud83d\udccc Note: This project is home-hosted. The live demo is generally available between 9 AM and 5 PM EST . If the link is temporarily down, please refer to this documentation to explore features, architecture, and usage. \ud83d\udc49 Live Demo \ud83d\udccc Overview BTCGambler is a full-stack crypto gambling app that simulates a high-stakes crash curve with real Bitcoin transaction handling. It supports: - Real-time multiplayer gameplay - Secure wallet management using Bitcoin Core - OAuth login (Google, GitHub, Facebook, Email) - Transaction batching and payout logic - Interactive chart, chat, and betting interface \ud83d\udcf7 Demo \ud83d\udcc1 Docs Features Architecture Setup Instructions","title":"BTCGambler"},{"location":"#btcgambler","text":"Welcome to the public documentation for BTCGambler \u2014 a real-time crash gambling game built on Bitcoin and WebSockets. \ud83d\udccc Note: This project is home-hosted. The live demo is generally available between 9 AM and 5 PM EST . If the link is temporarily down, please refer to this documentation to explore features, architecture, and usage. \ud83d\udc49 Live Demo","title":"BTCGambler"},{"location":"#overview","text":"BTCGambler is a full-stack crypto gambling app that simulates a high-stakes crash curve with real Bitcoin transaction handling. It supports: - Real-time multiplayer gameplay - Secure wallet management using Bitcoin Core - OAuth login (Google, GitHub, Facebook, Email) - Transaction batching and payout logic - Interactive chart, chat, and betting interface","title":"\ud83d\udccc Overview"},{"location":"#demo","text":"","title":"\ud83d\udcf7 Demo"},{"location":"#docs","text":"Features Architecture Setup Instructions","title":"\ud83d\udcc1 Docs"},{"location":"architecture/","text":"\ud83c\udfd7\ufe0f Architecture BTCGambler combines blockchain infrastructure with a real-time web stack. Components Frontend : React + Material UI Backend : Django Realtime Engine : WebSockets Worker : Celery for payout, logging, broadcasts Blockchain : Bitcoin Core integration for real transactions Reverse Proxy : Caddy + Docker Compose Diagram Insert architecture diagram here (optional)","title":"\ud83c\udfd7\ufe0f Architecture"},{"location":"architecture/#architecture","text":"BTCGambler combines blockchain infrastructure with a real-time web stack.","title":"\ud83c\udfd7\ufe0f Architecture"},{"location":"architecture/#components","text":"Frontend : React + Material UI Backend : Django Realtime Engine : WebSockets Worker : Celery for payout, logging, broadcasts Blockchain : Bitcoin Core integration for real transactions Reverse Proxy : Caddy + Docker Compose","title":"Components"},{"location":"architecture/#diagram","text":"Insert architecture diagram here (optional)","title":"Diagram"},{"location":"features/","text":"\ud83e\udde9 Features Real-Time Game Loop : Crash multiplier tracked live with WebSockets. WebSocket Engine : Automatically pauses/resumes when users join or leave. Secure Wallet System : Built on Bitcoin Core with strict UTXO control. Net Transactions : Combine payouts to reduce fees. Frontend : React + Material UI with chart, chat, and betting panel. Authentication : OAuth (Google, GitHub, Facebook) + 2FA. Chat System : Real-time user chat with live updates.","title":"\ud83e\udde9 Features"},{"location":"features/#features","text":"Real-Time Game Loop : Crash multiplier tracked live with WebSockets. WebSocket Engine : Automatically pauses/resumes when users join or leave. Secure Wallet System : Built on Bitcoin Core with strict UTXO control. Net Transactions : Combine payouts to reduce fees. Frontend : React + Material UI with chart, chat, and betting panel. Authentication : OAuth (Google, GitHub, Facebook) + 2FA. Chat System : Real-time user chat with live updates.","title":"\ud83e\udde9 Features"},{"location":"setup/","text":"\u2699\ufe0f Setup Instructions NOTE: This documentation is for demonstration purposes only. Source code is private. Requirements Docker + Docker Compose A synced Bitcoin Core node (testnet or mainnet) Redis Local Deployment (Optional) git clone https://github.com/youruser/btcgambler-docs cd btcgambler docker compose up --build Notes Actual Bitcoin RPC endpoints must be secured and configured in the .env file.","title":"\u2699\ufe0f Setup Instructions"},{"location":"setup/#setup-instructions","text":"NOTE: This documentation is for demonstration purposes only. Source code is private.","title":"\u2699\ufe0f Setup Instructions"},{"location":"setup/#requirements","text":"Docker + Docker Compose A synced Bitcoin Core node (testnet or mainnet) Redis","title":"Requirements"},{"location":"setup/#local-deployment-optional","text":"git clone https://github.com/youruser/btcgambler-docs cd btcgambler docker compose up --build","title":"Local Deployment (Optional)"},{"location":"setup/#notes","text":"Actual Bitcoin RPC endpoints must be secured and configured in the .env file.","title":"Notes"}]}